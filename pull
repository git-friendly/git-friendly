#!/bin/bash
#
# Usage: pull
#
# Pulls remote changes using rebase & tries to rebundle,
# safely stashing and re-applying your local changes, if any
#

# Colors
color_error="$(tput sgr 0 1)$(tput setaf 1)"
color_reset="$(tput sgr0)"

# Pop any stashed changes
unstash() {
  if [[ ! "$stash" =~ "No local changes to save" ]]; then
    echo
    echo "ðŸ•µ  Popping stash..."
    git stash pop
  fi
}

# Pop any stashed changes and exit
rollback() {
  echo
  echo "${color_error}Something went wrong, rolling back${color_reset}"
  unstash
  exit $1
}

branch=$(git branch --no-color 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/') || exit $?
default_remote="origin"
remote=$(git config "branch.${branch}.remote" || echo "$default_remote")
remote_branch=$( (git config "branch.${branch}.merge" || echo "refs/heads/$branch") | cut -d/ -f3- )

# Stash any local changes
stash=$(git stash)

# Update our remote
echo "ðŸš€  Fetching from $remote..."
git fetch $remote || rollback $?

# Pull, using rebase if configured
rebase="--rebase" # TODO disable if env-var is set
git pull $rebase $remote $remote_branch || rollback $?

# Update submodules
git submodule update || rollback $?

unstash

# Remove old, stale branches
git remote prune $remote >/dev/null 2>&1 &

# Bundle em if you got em!
if [ "$GIT_FRIENDLY_NO_BUNDLE" != "true" ]; then
  if which bundle >/dev/null 2>&1 && [ -f Gemfile ]; then
    echo
    echo "âš” Bundling gems..."
    bundle check >/dev/null 2>&1 || bundle install
  fi
fi

# Install Node.js packages with Yarn
if [ "$GIT_FRIENDLY_NO_YARN" != "true" ]; then
  if which npm >/dev/null 2>&1 && [ -f yarn.lock ]; then
    echo
    echo "âš”  Installing npm packages..."
    yarn install
  fi
fi

# Install Node.js packages with npm
if [ "$GIT_FRIENDLY_NO_NPM" != "true" ]; then
  if which npm >/dev/null 2>&1 && ( [ ! -f yarn.lock ] || [ "$GIT_FRIENDLY_NO_YARN" == "true" ] ) && [ -f package.json ]; then
    echo
    echo "âš”  Installing npm packages..."
    npm install
  fi
fi

# Install Bower components
if [ "$GIT_FRIENDLY_NO_BOWER" != "true" ]; then
  if which npm >/dev/null 2>&1 && [ -f bower.json ]; then
    echo
    echo "âš”  Installing Bower components..."
    bower install
  fi
fi

echo
echo "ðŸ¦„  Done"
exit 0
